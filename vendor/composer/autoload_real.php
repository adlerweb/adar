<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit616a023f1fbd80841cc474f527843718
=======

class ComposerAutoloaderInit616a023f1fbd80841cc474f527843718

>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit616a023f1fbd80841cc474f527843718', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit616a023f1fbd80841cc474f527843718', 'loadClassLoader'));
=======

        spl_autoload_register(array('ComposerAutoloaderInit616a023f1fbd80841cc474f527843718', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit616a023f1fbd80841cc474f527843718', 'loadClassLoader'));
>
>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInit616a023f1fbd80841cc474f527843718::getInitializer($loader));
=======

            call_user_func(\Composer\Autoload\ComposerStaticInit616a023f1fbd80841cc474f527843718::getInitializer($loader));

>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInit616a023f1fbd80841cc474f527843718::$files;
=======

            $includeFiles = Composer\Autoload\ComposerStaticInit616a023f1fbd80841cc474f527843718::$files;

>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequire616a023f1fbd80841cc474f527843718($fileIdentifier, $file);
=======

            composerRequire616a023f1fbd80841cc474f527843718($fileIdentifier, $file);

>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire616a023f1fbd80841cc474f527843718($fileIdentifier, $file)
=======

function composerRequire616a023f1fbd80841cc474f527843718($fileIdentifier, $file)

>>>>>>> 1109a11e1fb9fa159b102d9d84fca6fc37f90802
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
