#!/bin/bash

#####################################
# Scanscript for Dokument Archiving
#
# Autor: adlerweb + kreativmonkey
# Version: 0.5
#####################################

SCANNER="fujitsu:fi-4120C2dj:18084"
RESOLUTION=300
BRIGHTNESS=-32
SOURCE="ADF Duplex"
#SOURCE="ADF Front"
SCANMODE="lineart"
#SCANMODE="color"
#SCANMODE="gray"

blankpagesize=40k

#Info
#Scannt DIN A4 (310x210mm)
#Max 99 Seiten
#Erstellt ein durchsuchbares PDF

#Todo
# -> Aufgabenqueue - nächster Scan während OCR noch läuft

#Notizen:
# -> Unpaper entfernt, schluckt ggf. i-Punkte und Tabellenlinien
# -> hocr2pdf entfernt, wird durch tesseract version 3.03 nicht mehr benötigt.

TMPDIR=/tmp/scan
#unpaper=/usr/bin/unpaper
scanimage=/usr/bin/scanimage
pnmtojpeg=/usr/bin/pnmtojpeg
pnmtotiff=/usr/bin/pnmtotiff
#tiffcp=/usr/bin/tiffcp
tiff2pdf=/usr/bin/tiff2pdf
pnmtopng=/usr/bin/pnmtopng
tesseract=/usr/bin/tesseract
pdftk=/usr/bin/pdftk
convert=/usr/bin/convert

TESSDATA_PREFIX="/usr/share/"



#"Debug"-Modus (alle Befehle anzeigen)
set -x

#### PRÜFEN OB ALLE PROGRAMME VORHANDEN SIND ####
if [ ! -f "$scanimage" ] ;then
    echo scanimage not found - Package sane \(-frontend\)
    exit 1
fi

if [ ! -f "$pnmtojpeg" ] ;then
    echo pnmtojpeg not found - Package netpbm
    exit 1
fi

if [ ! -f "$pnmtotiff" ] ;then
    echo pnmtotiff not found - Package netpbm
    exit 1
fi

#if [ ! -f "$tiffcp" ] ;then
#    echo tiffcp not found
#    exit 1
#fi

if [ ! -f "$tiff2pdf" ] ;then
    echo tiff2pdf not found - package libtiff \(-tools/utils\)
    exit 1
fi

if [ ! -f "$tesseract" ] ;then
    echo tesseract not found - package tesseract
    exit 1
fi

if [ ! -f "$pdftk" ] ;then
    echo pdftk not found - package pdftk
    exit 1
fi

if [ ! -f "$convert" ] ;then
    echo convert not found - package imagemagick
    exit 1
fi

#if [ -a $unpaper ] ;then
#    echo unpaper not found
#    exit 1
#fi

#Temp-Verzeichnis anlegen/löschen
mkdir -p ${TMPDIR}
rm -Rvi ${TMPDIR}/*

#Dateiname für Ausgabe
OUTPUT=./scan-`date +%Y%m%d%H%M%S`.pdf

#Scan starten
${scanimage} -d "${SCANNER}" --source "${SOURCE}" --mode ${SCANMODE} --resolution "${RESOLUTION}" --format=pnm -p --brightness "${BRIGHTNESS}" --batch=/tmp/scan/scan-%d.pnm --page-height=310 --page-width=210 -x 210 -y 310

#${unpaper} -v --layout none ${TMPDIR}/scan-%d.pnm 
#${unpaper} --no-blackfilter --no-grayfilter --layout single -v ${TMPDIR}/scan-%d.pnm ${TMPDIR}/unpaper-%d.pnm
#${TMPDIR}/unpaper-%d.pnm

#PNM in TIFF umwandeln und komprimieren
for file in ${TMPDIR}/scan*; do
    ${pnmtotiff} $file >$file.raw.tiff
    #${tiffcp} -c zip:2 $file.raw.tiff $file.tiff
    $convert $file.raw.tiff -compress LZW $file.tiff
    rm $file.raw.tiff
    rm $file
done

#Dateien größer als $bankpagesize finden (=ohne leere Seiten)
files=`find ${TMPDIR} -iname "scan*tiff" -size +$blankpagesize`

#OCR starten und pro Seite ein PDF erstellen
for i in ${files} ;do
	$tesseract -l deu $i $i pdf
	rm $i
done

#rename 's/(\d)\0$1' unpaper-rename 's/(\d)\0$1' unpaper-[1-9].pnm.tiff.pdf
#for i in unpaper-[1-9].pnm.tiff.pdf ;do
#	echo $i
#done

#for i in `ls ${TMPDIR}/scan-*.pdf` ;do
#    mv $i `php -f /usr/local/bin/scanrename.php "$i"`
#done

for i in `ls ${TMPDIR}/scan-{0..9}.pdf 2>/dev/null` ;do
    mv $i ${TMPDIR}/scan-0${i##*-}
done

$pdftk ${TMPDIR}/*.pdf cat output "${OUTPUT}" 
rm -Rv ${TMPDIR}/*.tiff ${TMPDIR}/*.pdf ${TMPDIR}/*.hocr.html
