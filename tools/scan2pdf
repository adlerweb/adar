#!/bin/bash

#####################################
# Scanscript for Dokument Archiving
#
# Autor: adlerweb + kreativmonkey
# Version: 0.5
#####################################

#DEBUG=1

SCANNER="kvs20xx:libusb:002:118" # Scanner ID
#SCANNER=`scanimage -L  | cut -d "'" -f 1 | cut -d '`' -f 2`
RESOLUTION=300
BRIGHTNESS=118
SOURCE="ADF Duplex"
#SOURCE="ADF Front"
SCANMODE="lineart"
#SCANMODE="color"
#SCANMODE="gray"

# Optionen des Druckers anzeigen mit: scanimage -d $SCANNER -A
#SCANZUSATZOPTIONEN="--duplex=yes --feeder-mode=continuous --paper-size=A4"

KERNE=4 #Anzahl der zu verwendenden Kerne

blankpagesize=20k # Durch ausprobieren den richtigen Wert ermitteln.

#Info
#Scannt DIN A4 (310x210mm)
#Max 99 Seiten
#Erstellt ein durchsuchbares PDF

#Todo
# -> Aufgabenqueue - nächster Scan während OCR noch läuft

#Notizen:
# -> Unpaper deaktiviert, schluckt ggf. i-Punkte und Tabellenlinien

TMPDIR=/tmp/scan
#unpaper=/usr/bin/unpaper
scanimage=/usr/bin/scanimage
#tiffcp=/usr/bin/tiffcp
#tiff2pdf=/usr/bin/tiff2pdf
tesseract=/usr/bin/tesseract

# Programme um die PDFs zusammen zu fügen
stapler=/usr/bin/stapler
#pdftk=/usr/bin/pdftk       # package pdftk
#pdfjoin=/usr/bin/pdfjoin   # package pdfjam; PDFjam setzt eine pdfTeX-Installation voraus. pdfjam ist seit Trusty Tahr ein virtuelles Paket, das auf texlive-extra-utils verweist. 
#pdfunite=/usr/bin/pdfunite # package poppler-utils

convert=/usr/bin/convert
parallel=/usr/bin/parallel

TESSDATA_PREFIX="/usr/share/"


#"Debug"-Modus (alle Befehle anzeigen)
set -x

#### PRÜFEN OB ALLE PROGRAMME VORHANDEN SIND ####
if [ ! -f "$scanimage" ] ;then
    echo scanimage not found - Package sane \(-frontend\)
    exit 1
fi

#if [ ! -f "$tiffcp" ] ;then
#    echo tiffcp not found
#    exit 1
#fi

#if [ ! -f "$tiff2pdf" ] ;then
#    echo tiff2pdf not found - package libtiff \(-tools/utils\)
#    exit 1
#fi

if [ ! -f "$tesseract" ] ;then
    echo tesseract not found - package tesseract
    exit 1
fi

if [ ! -f "$stapler" ] && [ "$stapler" != "" ]; then
    echo stapler not found - package stapler
    exit 1
fi
if [ ! -f "$pdftk" ] && [ "$pdftk" != "" ]; then
    echo pdftk not found - package pdftk
    exit 1
fi
if [ ! -f "$pdfjoin" ] && [ "$pdfjoin" != "" ]; then
    echo "pdfjoin not found - package pdfjam; PDFjam setzt eine pdfTeX-Installation voraus."
    exit 1
fi
if [ ! -f "$pdfunite" ] && [ "$pdfunite" != "" ]; then
    echo pdfunite not found - package poppler-utils
    exit 1
fi

if [ ! -f "$convert" ] ;then
    echo convert not found - package imagemagick
    exit 1
fi

if [ ! -f "$parallel" ] ;then
    echo parallel not found - package parallel
    exit 1
fi

#if [ -a $unpaper ] ;then
#    echo unpaper not found
#    exit 1
#fi

#Temp-Dir creat and delete
mkdir -p ${TMPDIR}
rm -Rvi ${TMPDIR}/*

#Dateiname für Ausgabe
OUTPUT=./scan-`date +%Y%m%d%H%M%S`.pdf

OPTIONEN=""

if [ "${SOURCE}" != "" ]; then
    OPTIONEN="${OPTIONEN} --source ${SOURCE}"
fi

if [ "${SCANMODE}" != "" ]; then
    OPTIONEN="${OPTIONEN} --mode ${SCANMODE}"
fi

if [ "${RESOLUTION}" != "" ]; then
    OPTIONEN="${OPTIONEN} --resolution ${RESOLUTION}"
fi

if [ "${BRIGHTNESS}" != "" ]; then
    OPTIONEN="${OPTIONEN} --brightness ${BRIGHTNESS}"
fi

#Scan starten
${scanimage} -d "${SCANNER}" ${OPTIONEN} --format=tiff -p  --batch=${TMPDIR}/scan-%d.tiff -x 210 -y 310  ${SCANZUSATZOPTIONEN}
if [ "$?" != "0" ]; then
    exit $?
fi
#PNM in TIFF umwandeln und komprimieren
function convert_pnm () {
	$convert $1 -compress LZW $1.tiff
	rm $1
}

for file in ${TMPDIR}/scan*; do
    	convert_pnm $file
done

#Dateien größer als $blankpagesize finden (=ohne leere Seiten)
files=`find ${TMPDIR} -iname "scan*tiff" -size +$blankpagesize | sort`

#OCR starten und pro Seite ein PDF erstellen
parallel -j ${KERNE} \
$tesseract -l deu {} {.} pdf \
::: ${files}

#remove unused files
if [ "$DEBUG" != "1" ]; then
    rm ${TMPDIR}/*.tiff
fi

#Unpaper entfernt hier Punkte bei iäöü & co :/
#rename 's/(\d)\0$1' unpaper-rename 's/(\d)\0$1' unpaper-[1-9].pnm.tiff.pdf
#for i in unpaper-[1-9].pnm.tiff.pdf ;do
#	echo $i
#done

for i in `ls ${TMPDIR}/scan-{0..9}.tiff.pdf 2>/dev/null` ;do
    mv $i ${TMPDIR}/scan-0${i##*-}
done

pdfs=`find ${TMPDIR} -iname "scan*pdf" | sort`

if [ -f "$stapler" ]; then
    $stapler cat $pdfs "${OUTPUT}"
elif [ -f "$pdftk" ]; then
    pdftk $pdfs cat output "${OUTPUT}"
elif [ -f "$pdfjoin" ]; then
    pdfjoin $pdfs --outfile "${OUTPUT}"
elif [ -f "$pdfunite" ]; then
    pdfunite $pdfs "${OUTPUT}"
fi
if [ "$DEBUG" != "1" ]; then
    rm -Rv ${TMPDIR}/*.tiff ${TMPDIR}/*.pdf
fi



